let express,ApolloServer,gql,typeDefs,resolvers;_4cd‍.w("express",[["default",["express"],function(v){express=v}]]);_4cd‍.w("apollo-server-express",[["ApolloServer",["ApolloServer"],function(v){ApolloServer=v}],["gql",["gql"],function(v){gql=v}]]);_4cd‍.w("./graphql/typeDefs",[["default",["typeDefs"],function(v){typeDefs=v}]]);_4cd‍.w("./graphql/resolvers",[["default",["resolvers"],function(v){resolvers=v}]]);




const app = express();

const server = new ApolloServer({
  typeDefs,
  resolvers,
});

server.applyMiddleware({
  app,
  cosrs: {
    origin: 'http://localhost:3000'
  },
  bodyParserConfig: true,
})

const PORT = process.env.PORT ? parseInt(process.env.PORT) : 8000;
const HOSTNAME = process.env.HOSTNAME || '127.0.0.1';

app.listen(PORT, HOSTNAME, () => {
  console.log(`Server Started ad http://${HOSTNAME}:${PORT}`);
});
